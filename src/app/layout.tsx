
import type { Metadata } from 'next'
import { Inter } from 'next/font/google'
import {Navbar, NavbarBrand, NavbarContent, NavbarItem, Button, Link} from "@nextui-org/react";
import "./globals.css";
import {
  getKindeServerSession,
  RegisterLink,
  LoginLink,
  LogoutLink,
} from "@kinde-oss/kinde-auth-nextjs/server";
import './globals.css'

const inter = Inter({ subsets: ['latin'] })

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

const pages = [
  { path: '/dashboard', label: 'Home' },
  { path: '/dashboard/students', label: 'Students' },
  { path: '/dashboard/transactions', label: 'Transactions' },
];

export default async function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const { isAuthenticated, getUser } = getKindeServerSession();
  const user = await getUser();

  return (
    <html lang="en" className='dark'>
      <body className={inter.className}>
      <Navbar
        classNames={{
          item: [
            "flex",
            "relative",
            "h-full",
            "items-center",
            "data-[active=true]:after:content-['']",
            "data-[active=true]:after:absolute",
            "data-[active=true]:after:bottom-0",
            "data-[active=true]:after:left-0",
            "data-[active=true]:after:right-0",
            "data-[active=true]:after:h-[2px]",
            "data-[active=true]:after:rounded-[2px]",
            "data-[active=true]:after:bg-primary",
          ],
        }}
      >
        <NavbarBrand>
          <p className="font-bold text-inherit">ePLE-T</p>
        </NavbarBrand>
        <NavbarContent justify="end">
          {!(await isAuthenticated()) ? (
            // Content to display when isAuthenticated is true
            <>
            </>

          ) : (
            // Content to display when isAuthenticated is false
            <>
              {pages.map((page) => (
                <NavbarItem key={page.path}>
                  <Link href={page.path}  className='text-white'>
                    {page.label}
                  </Link>
                </NavbarItem>
              ))}
            </>
          )}
        </NavbarContent>
        <NavbarContent justify="end">
          {!(await isAuthenticated()) ? (
            // Content to display when isAuthenticated is true
            <>
              <NavbarItem className="hidden lg:flex">
                <LoginLink>
                  <Button color="default" variant="light">
                    Sign In
                  </Button>
                </LoginLink>
              </NavbarItem>
              <NavbarItem>
                <RegisterLink>
                  <Button color="primary" variant="flat">
                    Sign Up
                  </Button>
                </RegisterLink>
              </NavbarItem>
            </>
          ) : (
            // Content to display when isAuthenticated is false
            <>
              <NavbarItem>
                <LogoutLink>
                  <Button color="danger" variant="flat">
                    Sign Out
                  </Button>
                </LogoutLink>
              </NavbarItem>
            </>
          )}
        </NavbarContent>
      </Navbar>
        {children}
      </body>
    </html>
  )
}

